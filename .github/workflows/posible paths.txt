#include<bits/stdc++.h>
using namespace std;
int possible_paths(int v,int adj[][20],int start,int end,int k);
int main()
 {int t;
 
 cin>>t;
 
 while(t--)
 {int v;
     cin>>v;
     int adj[v][20];
     
     for(int i=0;i<v;i++)
     for(int j=0;j<v;j++)
     cin>>adj[i][j];
     
     
    int start,end,k; 
     cin>>start>>end>>k;
     bool visited[v];
     
     memset(visited,false,sizeof(visited));
   string str="";  
     cout<<possible_paths(v,adj,start,end,k,str)<<"\n";
     
 }
 
	
	return 0;
}


int possible_paths(int v,int adj[][20],int start,int end,int k)
{str.append(1,start);
    if(k<0)
    {
        return 0;
    }
    
    if(k==0&&start==end)
    {cout<<str<<"\n";
        return 1;
    }
    else if(k==0)
    return 0;
   
   int paths=0;
  int t;
    
   if(adj[start][start]==1)
   {t=k-1;}
    else
    t=1;
    
    if(k>0&&end==start)
    {
        paths++;
    }
  int p=0;     
 while(t--)
 {p++;
    for(int i=0;i<v;i++)
    {
     if(i!=start&&adj[start][i]==1)   
        {   
            paths+=possible_paths(v,adj,i,end,k-p);
            
            
        }
        
        
    }
 } 
    
    return paths;
    
}

